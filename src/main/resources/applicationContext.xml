<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/websocket   
    http://www.springframework.org/schema/websocket/spring-websocket-4.0.xsd  
    http://www.springframework.org/schema/mvc   
    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-4.0.xsd
	">

	<!-- ============================================================================================================================= -->


	<!--1.配置注解 -->
	<context:annotation-config />


	<!-- ============================================================================================================================= -->


	<!--2.自动扫描 -->
	<context:component-scan base-package="com.mycode">
		<!--配置不扫描配置器 -->
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- ============================================================================================================================= -->


	<!--3.切面 -->
	<aop:aspectj-autoproxy />


	<!-- ============================================================================================================================= -->


	<!-- 4.配置c3p0连接池 记住：导入jar包 c3p0-0.9.5.2.jar mchange-commons-java-0.2.11.jar -->
	<context:property-placeholder location="classpath:dbconfig.properties" />
	<bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 注入属性值 -->
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<!-- ============================================================================================================================= -->


	<!--5.mybatis整合 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--指定mabatis全局配置文件的位置 -->
		<property name="dataSource" ref="pooledDataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 指定mybatis的mapper文件的位置 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>


	<!-- ============================================================================================================================= -->


	<!--6.配置扫描器，将mydatis接口的实现加入到ioc容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描所有的dao接口的实现，加入到ioc容器中 -->
		<property name="basePackage" value="com.mycode.dao" />
	</bean>


	<!-- ============================================================================================================================= -->


	<!-- 7.事物管理配置 -->
	<!--1.配置事物管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 注入datasoure ,控制数据源-->
		<property name="dataSource" ref="pooledDataSource"></property>
	</bean>
	
	<!-- 第二步 配置事物增强 transaction-manager=class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	必要主要的都是采用xml配置，
	
	 -->
	<tx:advice id="txadvice" transaction-manager="transactionManager">
		<!-- 做事物操作 -->
		<tx:attributes>
			<!-- 设置进行事物操作的方法匹配规则 方法名含有指定的名称的方法进行事物增强 propagation="REQUIRED"指的是事物的级别 -->
			<tx:method name="*" propagation="REQUIRED" />
			<tx:method name="get*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 第三步配置切面 -->
	<aop:config>
		<!-- 切入点 com.mycode.service..双点事可以配置com.mycode.service子包也可以扫描到 -->
		<aop:pointcut expression="execution(* com.mycode.service..*(..))"
			id="txPintcut" />
		<!-- 切面 -->
		<aop:advisor advice-ref="txadvice" pointcut-ref="txPintcut" />
	</aop:config>



	<!-- ============================================================================================================================= -->





	<!--创建jdbcTemplate对象 <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"> 
		<property name="dataSource" ref="pooledDataSource"></property> </bean> -->



	<!-- ============================================================================================================================= -->
   
   
    <!--配置一个可以执行批量的sqlSession-->
     <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
       <constructor-arg name="sqlSessionFactory" ref="sessionFactory"></constructor-arg>
       <constructor-arg name="executorType" value="BATCH"></constructor-arg>
     </bean>
     
     
	<!-- ============================================================================================================================= -->




</beans>